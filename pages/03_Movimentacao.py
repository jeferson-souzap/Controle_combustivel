import locale
import streamlit as st
import datetime

# Define a localidade para portugu√™s do Brasil para formata√ß√£o de datas, etc.
locale.setlocale(locale.LC_ALL, 'pt_BR.UTF-8')

# Configura√ß√µes da p√°gina Streamlit
st.set_page_config(
    page_title='Movimenta√ß√£o de Ve√≠culos',
    layout='centered',  # Centraliza o conte√∫do da p√°gina
    initial_sidebar_state='collapsed'  # Sidebar inicialmente colapsada
)

# T√≠tulo principal da p√°gina
st.title("Registro de Movimenta√ß√£o de Ve√≠culos")
st.markdown("---")  # Divisor visual

# Checkbox para indicar se houve abastecimento. ESTE CHECKBOX EST√Å FORA DO FORMUL√ÅRIO
# para que ele possa controlar a visibilidade dos campos de abastecimento dinamicamente.
abasteceu_checkbox = st.checkbox('O ve√≠culo abasteceu nesta movimenta√ß√£o?', value=False,
                                 help='Marque esta op√ß√£o se houve abastecimento durante a movimenta√ß√£o.')

# Se√ß√£o 3: Detalhes do Abastecimento (condicional e fora do form principal)
st.subheader('Informa√ß√µes de Abastecimento')

# A se√ß√£o de abastecimento s√≥ aparece se o checkbox estiver marcado
if abasteceu_checkbox:
    # Coluna para o Posto de Combust√≠vel (agora aparece dinamicamente)
    col_posto, _ = st.columns([1, 2])
    with col_posto:
        st.selectbox('Posto de Combust√≠vel', options=['Posto BR', 'Posto Ipiranga', 'Posto Shell'],
                     help='Selecione o posto onde foi realizado o abastecimento.',
                     key='posto_combustivel')

    col9, col10, col11 = st.columns(3)  # 3 colunas para detalhes do abastecimento
    with col9:
        st.number_input('Litros Abastecidos', min_value=0.0, step=0.01, format="%.2f",
                        help='Quantidade de litros de combust√≠vel abastecidos.')
    with col10:
        st.number_input('Valor Abastecido (R$)', min_value=0.0, step=0.01, format="%.2f",
                        help='Valor total pago pelo abastecimento.')
    with col11:
        st.number_input('Qtd. no Tanque (Litros)', min_value=0.0, step=0.01, format="%.2f",
                        help='Quantidade estimada de combust√≠vel no tanque ap√≥s o abastecimento.')

    col12, col13 = st.columns(2)
    with col12:
        st.number_input('Autonomia Estimada (km)', value=0.0, disabled=True, format="%.2f",
                        help='Autonomia estimada restante do ve√≠culo. Pode ser calculada.')
    with col13:
        st.date_input('Data Prevista Abastecimento', value=datetime.date.today() + datetime.timedelta(days=7),
                      help='Data estimada para o pr√≥ximo abastecimento.')
else:
    # Mensagem opcional quando a se√ß√£o de abastecimento est√° oculta
    st.info("Marque a caixa acima se houver abastecimento para preencher os detalhes.")

st.markdown("---")  # Divisor visual

# Inicia o formul√°rio principal. Este formul√°rio conter√° os dados que ser√£o submetidos de uma vez.
with st.form(key='form_movimentacao_principal'):
    # Se√ß√£o 1: Detalhes Essenciais da Movimenta√ß√£o
    st.subheader('Detalhes da Movimenta√ß√£o')
    col1, col2, col3 = st.columns(3)  # Cria 3 colunas para organizar os campos

    with col1:
        st.date_input('Data do Movimento', value=datetime.date.today(), help='Selecione a data da movimenta√ß√£o.')
    with col2:
        st.selectbox('Carro (Placa)', options=['Carro A (ABC-1234)', 'Carro B (XYZ-5678)', 'Carro C (DEF-9012)'],
                     help='Selecione o ve√≠culo envolvido nesta movimenta√ß√£o.')
    with col3:
        st.selectbox('Motorista', options=['Jo√£o Silva', 'Maria Santos', 'Pedro Oliveira'],
                     help='Selecione o motorista respons√°vel pela movimenta√ß√£o.')

    col_rota, _ = st.columns([1, 2])
    with col_rota:
        st.selectbox('Rota', options=['Rota Di√°ria', 'Entrega Externa', 'Viagem Longa'],
                     help='Selecione a rota percorrida.')

    st.markdown("---")  # Divisor visual

    # Se√ß√£o 2: Registro de Quilometragem
    st.subheader('Registro de Quilometragem')
    col6, col7, col8 = st.columns(3)

    with col6:
        st.number_input('Km Inicial', min_value=0.0, step=0.1, format="%.1f",
                        help='Quilometragem registrada no in√≠cio da movimenta√ß√£o.')
    with col7:
        st.number_input('Km Final', min_value=0.0, step=0.1, format="%.1f",
                        help='Quilometragem registrada no final da movimenta√ß√£o.')
    with col8:
        st.number_input('Dist√¢ncia Percorrida (km)', value=0.0, disabled=True, format="%.2f",
                        help='Dist√¢ncia total percorrida. Ser√° calculada automaticamente.')

    st.markdown("---")  # Divisor visual

    # Se√ß√£o 4: Observa√ß√µes (dentro do formul√°rio principal)
    st.subheader('Observa√ß√µes Adicionais')
    st.text_area('Observa√ß√£o', height=100,
                 help='Qualquer observa√ß√£o relevante sobre esta movimenta√ß√£o (ex: problemas no ve√≠culo, rota alternativa).')

    st.markdown("---")  # Divisor visual

    # Bot√£o de submiss√£o do formul√°rio principal
    col_submit, _ = st.columns([1, 4])
    with col_submit:
        submit_button = st.form_submit_button("Salvar Movimenta√ß√£o")

    # L√≥gica de processamento ap√≥s a submiss√£o do formul√°rio
    if submit_button:
        # Aqui voc√™ coletaria os dados tanto do formul√°rio principal
        # quanto da se√ß√£o de abastecimento (se ela estiver vis√≠vel).
        # Por exemplo, para acessar o valor do checkbox: abasteceu_selecionado = st.session_state['abasteceu_checkbox']
        st.success("üéâ Movimenta√ß√£o registrada com sucesso! Os dados foram enviados para o sistema.")
